:local dnsName "demo.demodns.com"
:local certId
:local cert
:local Daysbefore 30d 
:local certDetail
:local certExpiresAfter
:local expired

# Try to find the certificate ID.
:do {
    :set certId [/certificate find common-name=$dnsName];

} on-error={
    :set certId "";
}

# Check whether a certificate was found.
:if ($certId) do={
    :set cert [/certificate get $certId];
    :set certExpiresAfter [/certificate get $certId value-name=expires-after];
    :set expired [/certificate get $certId value-name=expired];
} else {
    :log info "No certificate with the common name '$dnsName' found.";
}

:if ( [:len $cert] = 0 || $certExpiresAfter  <  $Daysbefore ||  $expired )  do={

     # Get LetsEncrypt certificate #
     :if ( [/certificate enable-ssl-certificate dns-name=$dnsName] = 0 ) do={
          :log info "[Letsencrypt] - Certificate Updated"
     } else={
          :log info "[Letsencrypt] - Try to open port in firewall and enable service"
          :delay 5000ms;
          /ip firewall/filter/add chain=input dst-port=80 protocol=tcp action=accept place-before=0 comment="Letsencrypt"
          /ip service enable [find port=80]
          :if ( [/certificate enable-ssl-certificate dns-name=$dnsName] = 0 ) do={
              :log info "[Letsencrypt] - Certificate Updated - Close ports"
          } else={
              :log error "[Letsencrypt] - Unable to generate certification - Close ports"
          }
     }
     # Remove custom firewall roule and disable services #
     /ip firewall/filter/remove [find comment="Letsencrypt"]
     /ip service disable [find port=80];

} else={
        :log info "[Letsencrypt] - Nothing to do!"
}

# Update Hotspot server profiles 
:foreach i in=[/ip hotspot profile find] do={
    :local profileName [/ip hotspot profile get $i name];
    :local loginByHTTPS [/ip hotspot profile get $i login-by];
    
    :if ($loginByHTTPS~"https") do={
        :log info "Update SSL certificate for the profile: $profileName";
        /ip hotspot profile set $i ssl-certificate=[/certificate find where common-name=$dnsName];
    } else {
        :log info "HTTPS login not activated for the profile: $profileName";
    }
}
